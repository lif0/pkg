name: coveralls
on:
  push:
    paths:
      - '**.go'
      - 'semantic/**'
      - 'concurrency/**'
      - '.github/workflows/**'
  pull_request:

permissions:
  contents: read        
  pull-requests: write  

env:
  GO_VERSION: stable

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        module: [semantic, concurrency]
    defaults:
      run:
        working-directory: ${{ matrix.module }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ matrix.module }}/go.mod
          #go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: ${{ matrix.module }}/go.sum

      - name: Vet
        run: go vet ./...

      - name: Test
        run: go test ./... -race -covermode=atomic -coverprofile=coverage.out

      - name: Build
        run: go build ./...
        
      - name: Upload to Coveralls (flag = module)
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.module }}/coverage.out
          format: golang  
          flag-name: ${{ matrix.module }}
          base-path: ${{ matrix.module }}
          parallel: true
          debug: true

  finish:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} 
          parallel-finished: true
          carryforward: "semantic,concurrency"
