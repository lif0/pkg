name: test coverage
on:
  push:
    branches:
      - main
    paths:
      - '**.go'
      - 'semantic/**'
      - 'concurrency/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - '**'

permissions:
  contents: write # чтоб бейджи грузились
#  pull-requests: write  

env:
  GO_VERSION: stable

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        module: [semantic, concurrency]
    defaults:
      run:
        working-directory: ${{ matrix.module }}

    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ matrix.module }}/go.mod
          cache: true
          cache-dependency-path: ${{ matrix.module }}/go.sum
          #go-version: ${{ env.GO_VERSION }}
          #cache-dependency-path: ${{ matrix.module }}/go.sum

      - name: Vet
        run: go vet ./...

      - name: Build
        run: go build ./...

      - name: Test
        run: |
          go test ./... -race -covermode=atomic -coverprofile=coverage_package_${{ matrix.module }}.out
          pwd
          ls

      - name: Install gopherbadger
        run: go install github.com/jpoles1/gopherbadger@latest

      - name: Generate badge
        run: |
          mkdir -p .github/assets/badges
          gopherbadger -coverfile=coverage_package_${{ matrix.module }}.out \
                       -badgefile=.github/assets/badges/_${{ matrix.module }}.svg

      - name: Commit badges
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .github/assets/badges/*.svg
          git commit -m "Update coverage badges [skip ci]" || echo "No changes"
          git push

      - name: Upload to Coveralls (flag = module)
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file:  ${{ matrix.module }}/coverage_package_${{ matrix.module }}.out
          format: golang  
          flag-name: ${{ matrix.module }}
          parallel: true

  finish:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Finish upload to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} 
          #coveralls-token: ${{ secrets.COVERALLS_TOKEN }}
          parallel-finished: true
          carryforward: "semantic,concurrency"
